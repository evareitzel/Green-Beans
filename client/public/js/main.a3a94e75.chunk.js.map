{"version":3,"sources":["components/NavBar.js","components/LoginForm.js","components/CreateAccountForm.js","pages/Login.js","components/Card.js","components/AddWalletcryptoForm.js","pages/Wallet.js","components/AddCryptoForm.js","pages/Cryptos.js","components/App.js","index.js"],"names":["NavBar","setWalletKey","onDarkModeClick","isDarkMode","className","to","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","loginWalletKey","setLoginWalletKey","password","setPassword","errors","setErrors","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","record","value","onChange","target","type","map","err","CreateAccountForm","walletKey","autoComplete","Login","showLogin","setShowLogin","Card","walletcrypto","onDeleteWalletcrypto","crypto","id","quantity","setQuantity","price","total","setTotal","name","symbol","toFixed","AddWalletcryptoForm","wallet","cryptos","onAddWalletcrypto","option","setOption","renderOptions","wallet_id","crypto_id","Wallet","walletcryptos","renderCards","length","AddCryptoForm","onAddCrypto","setSymbol","setName","setPrice","placeholder","Cryptos","renderCryptos","wallets","w","join","App","setWallet","setCryptos","setWalletcryptos","setIsDarkMode","useEffect","wallet_key","path","element","deleted","filtered","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3a94e75.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\nimport \"../App.css\"\n\nfunction NavBar({ setWalletKey, onDarkModeClick, isDarkMode }) {\n  \n  function handleLogoutClick() {\n    fetch('/logout', { method: 'DELETE' }).then(r => {\n      if (r.ok) {\n        setWalletKey(null)\n      }\n    })\n  }\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <Link to='/' className='logo'>Green 🌱 Beans</Link>\n        <Link to='/cryptos' className='nav-link'>Cryptos</Link>\n        <button onClick={onDarkModeClick} className=\"small-button\">{isDarkMode? \"Dark\" : \"Light\"} Mode</button>\n        <button onClick={handleLogoutClick} className='ghost-button'>\n          Logout\n        </button>\n      </nav>\n    </>\n  )\n}\n\nexport default NavBar","import { useState } from \"react\"\n\nfunction LoginForm({onLogin}) {\n  const [loginWalletKey, setLoginWalletKey] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState([])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    setErrors([])\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        \"wallet_key\": loginWalletKey, \n        password\n      }),\n    }).then(r => {\n      if (r.ok) {\n        r.json()\n        .then(loginWalletKey => onLogin(loginWalletKey))\n      } else {\n        r.json().then(record => setErrors(record.errors))\n      }\n    })\n  }\n  \n  return (\n    <form onSubmit={handleSubmit} className='form'>\n      <div className='form-field'>\n        <label>Wallet Key\n        <input \n          value={loginWalletKey}\n          onChange={e => setLoginWalletKey(e.target.value)}\n          type='text'\n          className=\"form-input\"\n        />\n        </label>\n      </div>\n      <div className='form-field'>\n        <label>Password\n          <input\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type='password'\n            className=\"form-input\"\n          />\n        </label>\n      </div>\n      <div className='button-wrapper'> \n        <button type='submit' className='button'>Log In</button> \n      </div>\n      \n      {errors.map(err => (\n        <div key={err} className='error'>🗙 {err}</div>\n      ))}\n    </form>\n  )\n}\n\nexport default LoginForm","import { useState } from \"react\"\n\nfunction CreateAccountForm({ onLogin }) {\n  const [walletKey, setWalletKey] = useState('')\n  const [password, setPassword] = useState('')      \n  const [errors, setErrors] = useState([])\n  \n  function handleSubmit(e) {\n    e.preventDefault()\n    setErrors([])\n    fetch('/create-account', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"wallet_key\": walletKey,\n        password\n      }),\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then(walletKey => onLogin(walletKey))\n      } else {\n        r.json().then(record => setErrors(record.errors))\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className='form'>\n      <div className='form-field'>\n        <label>Wallet Key \n          <input\n            value={walletKey}\n            onChange={e => setWalletKey(e.target.value)}\n            type='text'\n            autoComplete='off'\n            className=\"form-input\"\n          />\n        </label> \n      </div>\n      <div className='form-field'>\n        <label>Password \n          <input\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type='password'\n            className=\"form-input\"\n          />\n        </label>\n      </div>\n      <div className='button-wrapper'>\n        <button type='submit' className='button'>Create Account</button> \n      </div>\n\n      {errors.map(err => (\n        <div key={err} className='error'>🗙 {err}</div>\n      ))}\n    </form>\n  )\n}\n\nexport default CreateAccountForm","import { useState } from \"react\";\nimport '../App.css';\nimport LoginForm from \"../components/LoginForm\";\nimport CreateAccountForm from \"../components/CreateAccountForm\";\n\nfunction Login({onLogin}) {\n  const [showLogin, setShowLogin] = useState(true)\n\n  return (\n    <div className='wrapper'>\n      <h1 className='logo'>Green 🌱 Beans</h1>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <hr className='hr'/>\n          <p>\n            Don't have an account yet? &nbsp;\n            <br />\n            <button onClick={() => setShowLogin(false)} className='ghost-button'>\n              Create Account\n            </button>\n          </p>\n        </>\n      ) : (\n        <>\n          <CreateAccountForm onLogin={onLogin} />\n          <hr className='hr'/>\n          <p>\n            Already have an account? &nbsp;\n            <br />\n            <button onClick={() => setShowLogin(true)} className='ghost-button'>\n              Log In\n            </button>\n          </p>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Login","import { useState } from \"react\"\n\nfunction Card ({walletcrypto, onDeleteWalletcrypto}){\n  const {crypto, id} = walletcrypto\n  const [errors, setErrors] = useState([])\n  const [quantity, setQuantity] = useState(walletcrypto.quantity)\n  const [total, setTotal] = useState(walletcrypto.quantity * walletcrypto.crypto.price)\n\n  function handleSubmit(e){\n    e.preventDefault()\n    setErrors([])\n    fetch(`/walletcryptos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        quantity,\n        total: quantity * crypto.price\n      }),\n    }).then(r => {\n      if(r.ok) {\n        r.json().then(walletcrypto => setTotal(walletcrypto.total)\n        )\n      } else {\n        r.json().then(err => \n        setErrors(err.errors))\n      }\n    })\n  }\n\n  function handleDeleteClick(){\n    fetch(`/walletcryptos/${id}`, {\n      method: 'DELETE',\n    })\n    onDeleteWalletcrypto(walletcrypto)\n  }\n\n  return(\n    <li key={crypto.id} className=\"card\">\n      <h2>{crypto.name}</h2>\n      <p><strong>{crypto.symbol}</strong> ${crypto.price}</p>\n      <p className='total'>${((total * 100) / 100).toFixed(2)}</p>\n\n      <form onSubmit={handleSubmit}>\n        <div className='form-field'>\n          <label>Quantity\n          <input\n            value={quantity}\n            onChange={e => setQuantity(e.target.value)}\n            type='text'\n            className=\"quantity-input\"\n          />\n          </label>\n          <button type='submit' className='update-button'>Update</button>\n        </div>\n        \n        {errors.map(err => (\n          <div key={err} className='error'>🗙 {err}</div>\n        ))}\n      </form>\n      \n      <button onClick={handleDeleteClick} className='small-button'>Remove</button>\n    </li>\n  )\n}\n\nexport default Card","import { useState } from \"react\"\n\nfunction AddWalletcryptoForm({wallet, cryptos, onAddWalletcrypto}) {\n  const [quantity, setQuantity] = useState('100')\n  const [option, setOption] = useState('1')\n  const [errors, setErrors] = useState([])\n\n  if (!cryptos) return <h1>Loading...</h1>;\n\n  const renderOptions = cryptos.map(crypto => (\n    <option value={crypto.id} key={crypto.id}>\n      {crypto.symbol} • ${crypto.price}\n    </option>\n  ))\n\n  function handleFormSubmit(e) {\n    e.preventDefault()\n    setErrors([])\n\n    fetch('/walletcryptos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        wallet_id: wallet.id,\n        crypto_id: option,\n        quantity\n      }),\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then(walletcrypto => onAddWalletcrypto(walletcrypto))\n      } else {\n        r.json().then(record => setErrors(record.errors))\n      }\n    })\n    setQuantity('100')\n  }\n  \n  return(\n    <form onSubmit={handleFormSubmit} className='form'> \n    <h2>Add to Wallet</h2>\n    <div className='form-field'>\n      <label>Crypto</label>\n      <select onChange={e => setOption(e.target.value)} className='form-input'>\n        {renderOptions}\n      </select>\n    </div>\n    <div className='form-field'>\n    <label>Quantity \n      <input \n        value={quantity}\n        onChange={e => setQuantity(e.target.value)}\n        type='text'\n        className='form-input'\n      />\n      </label>\n      </div>\n    <button className='button' type='submit'>Add to Wallet</button>\n    \n    {errors.map(err => (\n      <div key={err} className='error'>🗙 {err}</div>\n    ))}\n  </form>\n  )\n}\n\nexport default AddWalletcryptoForm","import Card from \"../components/Card\"\nimport AddWalletcryptoForm from \"../components/AddWalletcryptoForm\"\n\nfunction Wallet({walletKey, wallet, cryptos, walletcryptos, onAddWalletcrypto, onDeleteWalletcrypto}) {\n\n  if (!walletcryptos) return <h2>Loading...</h2>;\n\n  const renderCards = walletcryptos.map(walletcrypto => <Card walletcrypto={walletcrypto} onDeleteWalletcrypto={onDeleteWalletcrypto} key={walletcrypto.id} />)\n\n  return (\n    <>\n      <h2>My Cryptos</h2>\n      <h3>Wallet Key {walletKey}</h3>        \n      {\n        walletcryptos.length === 0\n        ? <p>There are no cryptos in your wallet 🥺<br />\n        </p>\n        : <ul className=\"list\">{renderCards}</ul>\n      }\n      <AddWalletcryptoForm \n        wallet={wallet} \n        cryptos={cryptos}\n        onAddWalletcrypto={onAddWalletcrypto} />  \n    </>\n  )\n}\n\nexport default Wallet","import { useState } from \"react\"\n\nfunction AddCryptoForm({onAddCrypto}) {\n  const [symbol, setSymbol] = useState('')\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState('')\n  const [errors, setErrors] = useState([])\n\n  function handleFormSubmit(e) {\n    e.preventDefault()\n    setErrors([])\n\n    fetch('cryptos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        symbol,\n        name,\n        price\n      }),\n    })\n\n    .then(r => {\n      if (r.ok) {\n        r.json().then(crypto => onAddCrypto(crypto))\n        setSymbol('')\n        setName('')\n        setPrice('')\n      } else {\n        r.json().then(record => setErrors(record.errors))\n      }\n    })\n  }\n\n  return (\n    <form className='form' onSubmit={handleFormSubmit}>\n      <h2>Import new crypto</h2>\n      <div className='form-field'>\n        <input \n          value={symbol}            onChange={e => setSymbol(e.target.value)}\n          type='text'\n          className='form-input'\n          placeholder='Symbol'\n        />\n      </div>\n      <div className='form-field'>\n        <input \n          value={name}\n          onChange={e => setName(e.target.value)}\n          type='text'\n          className='form-input'\n          placeholder='Name'\n        />\n      </div>\n      <div className='form-field'>\n        <input \n          value={price}\n          onChange={e => setPrice(e.target.value)}\n          type='text'\n          className='form-input'\n          placeholder='Price'\n        />\n      </div>\n      <button type='submit' className='button'>Import new crypto</button>\n      {errors.map(err => (\n        <div key={err} className='error'>🗙 {err}</div>\n      ))}\n    </form>\n  )\n}\n\nexport default AddCryptoForm","import AddCryptoForm from \"../components/AddCryptoForm\"\n\nfunction Cryptos({cryptos, onAddCrypto}) {\n  var popularity = \"\"\n\n  const renderCryptos = cryptos.map(crypto => (\n    <li key={crypto.id} className='list-item'>\n      <strong>{crypto.symbol}</strong> | {crypto.name} ${crypto.price}   \n      {crypto.wallets.map(w => popularity + \"⭐\").join('')}\n    </li>\n  ))\n  \n  return (\n    <>\n      <ul className='list'>\n        {renderCryptos}\n      </ul>\n      <AddCryptoForm onAddCrypto={onAddCrypto}/>\n    </>\n  )\n}\n\nexport default Cryptos","import React, { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport NavBar from \"./NavBar\"\nimport Login from \"../pages/Login\"\nimport Wallet from \"../pages/Wallet\"\nimport Cryptos from \"../pages/Cryptos\"\n\nfunction App() {\n  const [walletKey, setWalletKey] = useState(null)\n  const [wallet, setWallet] = useState(null)\n  const [cryptos, setCryptos] = useState(null)\n  const [walletcryptos, setWalletcryptos] = useState(null)\n  const [isDarkMode, setIsDarkMode] = useState(true)\n\n  useEffect(() => {\n    // auto-login\n    fetch('/wallet').then(r => {\n      if (r.ok) {\n        r.json().then(wallet => setWalletKey(wallet.wallet_key))\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    fetch('/wallet')\n      .then(r => r.json())\n      .then(wallet => setWallet(wallet))\n  }, [])\n\n    useEffect(() =>{\n      fetch('/cryptos')\n      .then(r => r.json())\n      .then(cryptos => setCryptos(cryptos))\n    }, [wallet, walletcryptos])\n\n    useEffect(() => {\n      fetch('/wallet')\n        .then(r => r.json())\n        .then(wallet => setWalletcryptos(wallet.walletcryptos))\n    }, [])\n\n    const handleDarkModeClick = () => {\n      setIsDarkMode(isDarkMode => !isDarkMode)\n    }\n\n  function handleLogin(wallet) {\n    setWalletKey(wallet.wallet_key)\n    setWallet(wallet)\n  }\n\n  function handleAddCrypto(crypto) {\n    setCryptos([...cryptos, crypto])\n  }\n\n  function handleAddWalletcrypto(walletcrypto) {\n    setWalletcryptos([...walletcryptos, walletcrypto])\n  }\n\n  function handleDeleteWalletcrypto(deleted) {\n    const filtered = walletcryptos.filter(walletcrypto => {\n      return walletcrypto.id !== deleted.id   \n    })\n    setWalletcryptos(filtered)\n  }\n\n  if (!walletKey) return <Login onLogin={handleLogin} />\n\n  return (\n    // <main className='wrapper'>\n    <main className={'wrapper '+ (isDarkMode ? \"dark\" : \"light\")}>\n      {/* <div className={\"App \"+ (isDarkMode ? \"dark\" : \"light\")}> */}\n        <Router>\n          <NavBar walletKey={walletKey} setWalletKey={setWalletKey} onDarkModeClick={handleDarkModeClick} isDarkMode={isDarkMode} />\n          <Routes>\n            <Route\n              path='/'\n              element={<Wallet\n                walletKey={walletKey}\n                wallet={wallet}\n                cryptos={cryptos}\n                walletcryptos={walletcryptos}\n                onAddWalletcrypto={handleAddWalletcrypto}\n                onDeleteWalletcrypto={handleDeleteWalletcrypto}\n              />}\n            />\n            <Route \n              path='/cryptos' \n              element={<Cryptos\n                walletKey={walletKey}\n                wallet={wallet}\n                cryptos={cryptos}\n                onAddCrypto={handleAddCrypto}\n              />} \n            />\n          </Routes>\n        </Router>\n      {/* </div> */}\n    </main>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}